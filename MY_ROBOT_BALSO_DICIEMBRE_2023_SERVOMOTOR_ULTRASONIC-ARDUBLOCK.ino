#include <ESP32Servo.h>
#include <Wire.h>
#include <LCD.h>
#include <LiquidCrystal_I2C.h>

int _ABVAR_1_distance = 0 ;
int ardublockUltrasonicSensorCodeAutoGeneratedReturnCM(int trigPin, int echoPin)
{
  long duration;
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(20);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  duration = duration / 59;
  if ((duration < 2) || (duration > 300)) return false;
  return duration;
}

Servo servo_pin_26;
// For these LCD controls to work you MUST replace the standard LCD library with 'New LCD' from...
// https://bitbucket.org/fmalpartida/new-liquidcrystal/wiki/Home
// Direct download https://bitbucket.org/fmalpartida/new-liquidcrystal/downloads/LiquidCrystal_V1.2.1.zip
// Your project will not compile until this is done.
//
LiquidCrystal_I2C lcd_I2C_3C(0x3C, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);

void setup()
{
  digitalWrite( 5 , LOW );

  Serial.begin(9600);
  servo_pin_26.attach(26);
  lcd_I2C_3C.begin (22, 21);
  lcd_I2C_3C.setBacklight(HIGH);
}

void loop()
{
  _ABVAR_1_distance = 	ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 5 , 18 ) ;
  Serial.print("distance");
  Serial.print(" ");
  Serial.print(_ABVAR_1_distance);
  Serial.print(" ");
  Serial.println();
  if (( ( _ABVAR_1_distance ) < ( 20.0 ) ))
  {
    servo_pin_26.write( 90 );
    delay( 500 );
  }
  else
  {
    servo_pin_26.write( 0 );
    delay( 500 );
  }
  lcd_I2C_3C.setCursor( (1) - 1, (1) - 1 );
  lcd_I2C_3C.print( "Sainsmart LCD. I2C" );
  lcd_I2C_3C.print( _ABVAR_1_distance );
}
